DESCRIPTION="Director starts the other Ninja Sphere services"
PACKAGE_NAME="sphere-nodejs-director" #no spaces or underscores
NPM_INSTALL_DIRS=""
PACKAGE_DEPS="" #dependencies for this package
VERSION_FILE="/opt/ninjablocks/sphere-director/package.json" #file containing version of package, most likely package.json

# these files used to come from sphere-dev aka "ninjasphere", so mark this as breaking ninjasphere so it upgrades first
FPM_EXTRA_OPTS=('--deb-field' 'Replaces: ninjasphere (<< 0.2)' '--deb-field' 'Breaks: ninjasphere (<< 0.2)')

#Add platform specific variables and functions here

sphere-nodejs-director_update() {
  ./npm-item.sh sphere-director
  ./npm-item.sh sphere-common
}

sphere-nodejs-director_sync_staging() {
  staging-rsync ${SRC_DIR}/ /opt/ninjablocks --exclude 'guides' --exclude 'npm-item.sh'
}

sphere-nodejs-director_version() {

    ########### define me ##############
    myVersion=`cat ${STAGE_DIR}/${VERSION_FILE} | grep version | cut -d: -f2 | sed 's/[", ]//g'`
    #################################

    if [[ -z $myVersion ]]; then
        echo "${FUNCNAME[0]} is unable to return a proper version number, please check pkg.conf for ${PACKAGE_NAME}"
        exit 1
    fi

    VERSION=$myVersion

}
